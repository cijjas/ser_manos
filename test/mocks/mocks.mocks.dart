// Mocks generated by Mockito 5.4.6 from annotations
// in ser_manos/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ser_manos/models/novedad.dart' as _i4;
import 'package:ser_manos/models/user.dart' as _i6;
import 'package:ser_manos/models/voluntariado.dart' as _i8;
import 'package:ser_manos/services/novedad_service.dart' as _i2;
import 'package:ser_manos/services/user_service.dart' as _i5;
import 'package:ser_manos/services/voluntariado_service.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NovedadService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNovedadService extends _i1.Mock implements _i2.NovedadService {
  MockNovedadService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Novedad>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Novedad>>.value(<_i4.Novedad>[]),
      ) as _i3.Future<List<_i4.Novedad>>);

  @override
  _i3.Stream<List<_i4.Novedad>> watchAll() => (super.noSuchMethod(
        Invocation.method(
          #watchAll,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.Novedad>>.empty(),
      ) as _i3.Stream<List<_i4.Novedad>>);

  @override
  _i3.Stream<_i4.Novedad> watchOne(String? id) => (super.noSuchMethod(
        Invocation.method(
          #watchOne,
          [id],
        ),
        returnValue: _i3.Stream<_i4.Novedad>.empty(),
      ) as _i3.Stream<_i4.Novedad>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i5.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createUser(_i6.User? user) => (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [user],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> postulateToVoluntariado(
    _i6.User? user,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postulateToVoluntariado,
          [
            user,
            id,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> withdrawPostulation(
    _i6.User? user,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #withdrawPostulation,
          [
            user,
            id,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> abandonVoluntariado(
    _i6.User? user,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #abandonVoluntariado,
          [
            user,
            id,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Stream<_i6.UserVoluntariado?> watchParticipating(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchParticipating,
          [userId],
        ),
        returnValue: _i3.Stream<_i6.UserVoluntariado?>.empty(),
      ) as _i3.Stream<_i6.UserVoluntariado?>);

  @override
  _i3.Stream<_i6.User> watchOne(String? id) => (super.noSuchMethod(
        Invocation.method(
          #watchOne,
          [id],
        ),
        returnValue: _i3.Stream<_i6.User>.empty(),
      ) as _i3.Stream<_i6.User>);

  @override
  _i3.Future<void> toggleLikeVoluntariado(
    _i6.User? user,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleLikeVoluntariado,
          [
            user,
            id,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i6.User?> updateUser(_i6.User? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i3.Future<_i6.User?>.value(),
      ) as _i3.Future<_i6.User?>);
}

/// A class which mocks [VoluntariadoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVoluntariadoService extends _i1.Mock
    implements _i7.VoluntariadoService {
  MockVoluntariadoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i8.Voluntariado> watchOne(String? id) => (super.noSuchMethod(
        Invocation.method(
          #watchOne,
          [id],
        ),
        returnValue: _i3.Stream<_i8.Voluntariado>.empty(),
      ) as _i3.Stream<_i8.Voluntariado>);

  @override
  _i3.Stream<List<_i8.Voluntariado>> watchFiltered(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchFiltered,
          [query],
        ),
        returnValue: _i3.Stream<List<_i8.Voluntariado>>.empty(),
      ) as _i3.Stream<List<_i8.Voluntariado>>);

  @override
  _i3.Future<bool> decrementAvailableSlots(String? id) => (super.noSuchMethod(
        Invocation.method(
          #decrementAvailableSlots,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> incrementAvailableSlots(String? id) => (super.noSuchMethod(
        Invocation.method(
          #incrementAvailableSlots,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
